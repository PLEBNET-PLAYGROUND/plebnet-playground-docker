# This is a basic workflow to help you get started with Actions
name: codespell

# Controls when the action will run. 
on: [push, pull_request]

jobs:

  ubuntu-site-matrix:
    name: github-workspace
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: printenv
        run: |
          printenv
      - name: install-codespell-asciidoctor
        run: |
          sudo apt install asciidoctor
          pip3 install -U codespell
          go install github.com/client9/misspell/cmd/misspell@latest
      - name: markdown-syntax
        run: |
          git grep -n --color $'\r' -- "*.md" && echo "^ Possible Windows style line ending detected. Please use Unix style line endings (\n)." && exit 0 || true
          git grep -n --color ' $' -- "*.md" && echo "^ Trailing space detected at end of line. Please remove." && exit 0 || true
          git grep  -n --color  $'\t' -- "*.md" && echo "^ Use of tabs detected. Please use space for indentation." && exit 0 || true
          git grep -iE  -n --color '(^| )(\w+) \2(\.|,|:|;| |$)' -- "*.md" && echo "^ Detected lexical illusion in the form of a duplicated word. Please correct." && exit 0 || true
          for FILE in $(git ls-files -- "*.md"); do if [[ $(tail -c1 $FILE) != "" ]]; then echo "File ${FILE} does not end with a newline character (\n)."; exit 0; fi; done
          git grep "" -- "*.md" | uniq -c | grep -1 "^      [2-9] " | cut -b9- | sed 's/:$/:[more-than-one-blank-line-here-please-remove]/' \ 
          | grep ":" && echo "^ Multiple blank lines detected. Please use only one blank line between paragraphs." && exit 0 || true
      - name: codespell-py-md
        run: |
          codespell --config .codespellrc --ignore-words .codespell-ignore $(git ls-files -- "*.py" "*.md")
      - name: codespell-html
        run: |
          codespell --config .codespellrc --ignore-words .codespell-ignore ./docs/docs/*.html
      - name: git-grep-terms-debug
        run: |
          echo "change when needed for PRs"
          git grep ARCH
          git grep TRIPLET
          git grep "version: \"3"

