name: plebnet-playground

# Controls when the action will run. 
on:
  pull_request:
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #paths:
    #  - '.github/workflows/automate.yml'
    #schedule:
    #  - cron: "*/5 * * * *"
    branches:       #[ master ]
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - 'master'    # includes master
      - 'main'      # includes main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  github-workspace:
    name: github-workspace
    runs-on: ubuntu-18.04
    steps:
      - name: Print github workspace
        run: |
          printenv

  ubuntu-latest-build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: nuke docker
        run: |
          sudo systemctl stop docker
          sudo rm -rf /var/lib/docker
          sudo rm -rf /etc/docker
          sudo apt-get purge docker-ce docker-ce-cli containerd.io moby-engine moby-cli
      - name: Re-install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker --version > docker-version.log
          sudo apt-get install docker-compose
          docker-compose --version > docker-compose-version.log
      - name: Enable experimental features in Docker
        run: |
          sudo rm -rf /etc/docker/daemon.json
          echo '{"experimental": true}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
      - name: git-remote-add plebnet
        run: |
          git remote add upstream https://github.com/PLEBNET-PLAYGROUND/plebnet-playground-docker.git
          git fetch --all
      - name: install, log versions
        run: |
          sudo apt install python python3
          sudo apt install -y mkdocs
          pip     install -r         requirements.txt
          pip     install -r    docs/requirements.txt
          python  --version  >  python-version.log
          python3 --version >>  python-version.log
          mkdocs  --version  >  mkdocs-version.log
      - name: make init install
        run: |
          make init report
          make install & wait 100 &
          play               >  play-command.log
          play ids          >>  play-command.log

      - name: archive
        run: |
          tree  > tree.log
          git checkout -f upstream/master
          git diff HEAD~1 > diff.log
          tree >> tree.log
          sudo tar -cvf log.tar *.log docs/docs
      - name: upload-logs-tar
        uses: actions/upload-artifact@v2
        with:
          path: log.tar
          name: log.tar

  ubuntu-20-build_and_test:
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: nuke docker
        run: |
          sudo systemctl stop docker
          sudo rm -rf /var/lib/docker
          sudo rm -rf /etc/docker
          sudo apt-get purge docker-ce docker-ce-cli containerd.io moby-engine moby-cli
      - name: Re-install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          docker --version
          sudo apt-get install docker-compose
          docker-compose -v
      - name: Enable experimental features in Docker
        run: |
          sudo rm -rf /etc/docker/daemon.json
          echo '{"experimental": true}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
      - name: git-remote-add plebnet
        run: |
          git remote add upstream https://github.com/PLEBNET-PLAYGROUND/plebnet-playground-docker.git
          git fetch --all
      - name: install, log versions
        run: |
          sudo apt install python python3
          sudo apt install -y mkdocs
          pip     install -r         requirements.txt
          pip     install -r    docs/requirements.txt
          python  --version  >  python-version.log
          python3 --version >>  python-version.log
          mkdocs  --version  >  mkdocs-version.log
      - name: make init install
        run: |
          make init report
          make install & wait 100 &
          play               >  play-command.log
          play ids          >>  play-command.log
      - name: archive
        run: |
          tree  > tree.log
          git checkout -f upstream/master
          git diff HEAD~1 > diff.log
          tree >> tree.log
          sudo tar -cvf log.tar *.log docs/docs
      - name: upload-logs-tar
        uses: actions/upload-artifact@v2
        with:
          path: log.tar
          name: log.tar

