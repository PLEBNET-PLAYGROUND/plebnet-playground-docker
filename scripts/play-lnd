#!/bin/bash

if hash docker 2>/dev/null; then

LND_ID=$(echo $(docker ps | awk '/-lnd/'|awk ' {print $1}' | awk 'NR==1'))
export LND_ID
LND_IMAGE=$(echo $(docker images | awk '/docker_lnd/'|awk ' {print $3}' | awk 'NR==1'))
export LND_IMAGE

for ((i=1;i<=$#;i++));
do

    if [[ ${!i} = info ]]; then
        ((i++))
        echo "!i = ${!i}"
        echo "0 = $0"
        echo "1 = $1"
        echo "2 = $2"
        echo "3 = $3"
        echo "4 = $4"
        echo "5 = $5"
        echo "6 = $6"
        echo "7 = $7"
        echo $LND_ID
        exit

    elif [[ ${!i} = id ]]; then
        ((i++))
        echo $LND_ID
        exit

    elif [[ ${!i} = config ]]; then
        ((i++))
        docker inspect $(play-lnd id) | jq '.[] | {(.Name) : [(.Config)]}'
        exit

    elif [[ ${!i} = ip ]]; then
        ((i++))
        docker inspect $(play-bitcoin id) | jq '.[] | {(.Name) : [(.NetworkSettings.Networks."plebnet-playground-docker_default".IPAddress)]}' | jq .[] | jq .[]
        exit

    elif [[ ${!i} = port* ]]; then
        ((i++))
        docker inspect $(play-lnd id) | jq '.[] | {(.Name) : [(.NetworkSettings.Ports)]}'
        exit

    elif [[ ${!i} = env ]]; then
        ((i++))
        play-lnd config | jq .[] |  jq .[] | jq .Env
        exit

    elif [[ ${!i} = top ]]; then
        ((i++))
        docker top $LND_ID
        exit

    elif [[ ${!i} = *start ]]; then
        ((i++))
        docker-compose up lnd &
        exit

    elif [[ ${!i} = stop ]]; then
        ((i++))
        docker stop $LND_ID
        exit

    elif [[ ${!i} = *shell ]]; then
        ((i++))
        docker exec -it $LND_ID sh
        exit

    elif [[ ${!i} = iftop ]]; then
        ((i++))
        docker exec -it $LND_ID /bin/bash -c "test -x '$(which iftop)' && iftop -P -p -i eth0 $2 $3 $4 $5 || apk add iftop && iftop -P -p -i eth0 $2 $3 $4 $5"
        #docker exec $LND_ID /bin/bash -c "test -x '$(which iftop)' && iftop -P -p -i eth0 $2 $3 $4 $5 || apk add iftop && iftop -P -p -i eth0 $2 $3 $4 $5"
        exit

    elif [[ ${!i} = *newaddress ]]; then
        ((i++))
        docker exec $LND_ID sh -c "lncli -n signet newaddress p2wkh | jq -r .address"
        exit

    elif [[ ${!i} = walletbalance ]]; then
        ((i++))
        docker exec $LND_ID sh -c "lncli -n signet walletbalance"
        exit
    elif [[ ${!i} = total-balance ]]; then
        ((i++))
        docker exec $LND_ID sh -c "lncli -n signet walletbalance | jq -r .total_balance"
        exit
    elif [[ ${!i} = confirmed-balance ]]; then
        ((i++))
        docker exec $LND_ID sh -c "lncli -n signet walletbalance | jq -r .confirmed_balance"
        exit
    elif [[ ${!i} = unconfirmed-balance ]]; then
        ((i++))
        docker exec $LND_ID sh -c "lncli -n signet walletbalance | jq -r .unconfirmed_balance"
        exit

    elif [[ ${!i} = stop ]]; then
        ((i++))
        docker stop $LND_ID
        exit

    elif [[ ${!i} == help ]]; then
        ((i++))
        echo "play-lnd id"
        echo "play-lnd top"
        echo "play-lnd ifconfig"
        echo "play-lnd iftop"
        echo "play-lnd shell"
        echo "play-lnd start"
        echo "play-lnd stop"
        echo
        echo "play-lnd '<COMMAND>'"
        echo "play-lnd newaddress"
        echo "play-lnd walletbalance"
        echo "play-lnd total-balance"
        echo "play-lnd confirmed-balance"
        echo "play-lnd unconfirmed-balance"
        echo
        echo "https://www.plebnet.fun"
        echo
        echo "Fund LND signet wallet:"
        echo "play-getcoins -a \$(play-lnd getnewaddress)"
        exit

    elif [[ -n ${!i} ]]; then
        ((i++))
        docker exec $LND_ID sh -c  "$1 $2 $3 $4 $5 $6 $7 $8 $9"
        exit
    fi

done;
play-lnd help;
fi #end if docker hash

